{
  "schema_version": "0.4.0",
  "metadata": {
    "name": "defuse-poa-factory",
    "version": "0.1.0",
    "build": {
      "compiler": "rustc 1.84.1",
      "builder": "cargo-near cargo-near-build 0.4.4"
    },
    "wasm_hash": "5efF2hdUm6EDPHtfFfzUWVgZ8878yX9SSaXy8cSH1HZu"
  },
  "body": {
    "functions": [
      {
        "name": "acl_add_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_add_super_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_get_admins",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "skip",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            {
              "name": "limit",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountId"
            }
          }
        }
      },
      {
        "name": "acl_get_grantees",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "skip",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            {
              "name": "limit",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountId"
            }
          }
        }
      },
      {
        "name": "acl_get_permissioned_accounts",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PermissionedAccounts"
          }
        }
      },
      {
        "name": "acl_get_super_admins",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "skip",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            {
              "name": "limit",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountId"
            }
          }
        }
      },
      {
        "name": "acl_grant_role",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_has_any_role",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "roles",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_has_role",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_init_super_admin",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_is_admin",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_is_super_admin",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_renounce_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_renounce_role",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_revoke_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_revoke_role",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_revoke_super_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_role_variants",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      {
        "name": "acl_storage_prefix",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      },
      {
        "name": "acl_transfer_super_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "add_full_access_key",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "public_key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "contract_source_metadata",
        "kind": "view"
      },
      {
        "name": "delete_key",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "public_key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "deploy_token",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "metadata",
              "type_schema": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/FungibleTokenMetadata"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "ft_deposit",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "owner_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "amount",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "memo",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "new",
        "kind": "call",
        "modifiers": [
          "init"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "super_admins",
              "type_schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/AccountId"
                },
                "uniqueItems": true
              }
            },
            {
              "name": "admins",
              "type_schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountId"
                  },
                  "uniqueItems": true
                }
              }
            },
            {
              "name": "grantees",
              "type_schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountId"
                  },
                  "uniqueItems": true
                }
              }
            }
          ]
        }
      },
      {
        "name": "pa_all_paused",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          }
        }
      },
      {
        "name": "pa_is_paused",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "pa_pause_feature",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "pa_storage_key",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      },
      {
        "name": "pa_unpause_feature",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "set_metadata",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "metadata",
              "type_schema": {
                "$ref": "#/definitions/FungibleTokenMetadata"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "tokens",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/AccountId"
            }
          }
        }
      }
    ],
    "root_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string",
      "definitions": {
        "AccountId": {
          "description": "NEAR Account Identifier.\n\nThis is a unique, syntactically valid, human-readable account identifier on the NEAR network.\n\n[See the crate-level docs for information about validation.](index.html#account-id-rules)\n\nAlso see [Error kind precedence](AccountId#error-kind-precedence).\n\n## Examples\n\n``` use near_account_id::AccountId;\n\nlet alice: AccountId = \"alice.near\".parse().unwrap();\n\nassert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ```",
          "type": "string"
        },
        "Base64VecU8": {
          "description": "Helper class to serialize/deserialize `Vec<u8>` to base64 string.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "FungibleTokenMetadata": {
          "type": "object",
          "required": [
            "decimals",
            "name",
            "spec",
            "symbol"
          ],
          "properties": {
            "decimals": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "icon": {
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "type": "string"
            },
            "reference": {
              "type": [
                "string",
                "null"
              ]
            },
            "reference_hash": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Base64VecU8"
                },
                {
                  "type": "null"
                }
              ]
            },
            "spec": {
              "type": "string"
            },
            "symbol": {
              "type": "string"
            }
          }
        },
        "PermissionedAccounts": {
          "description": "Collects super admin accounts and accounts that have been granted permissions defined by `AccessControlRole`.\n\n# Data structure\n\nAssume `AccessControlRole` is derived for the following enum, which is then passed as `role` attribute to `AccessControllable`.\n\n```rust pub enum Role { PauseManager, UnpauseManager, } ```\n\nThen the returned data has the following structure:\n\n```ignore PermissionedAccounts { super_admins: vec![\"acc1.near\", \"acc2.near\"], roles: HashMap::from([ (\"PauseManager\", PermissionedAccountsPerRole { admins: vec![\"acc3.near\", \"acc4.near\"], grantees: vec![\"acc5.near\", \"acc6.near\"], }), (\"UnpauseManager\", PermissionedAccountsPerRole { admins: vec![\"acc7.near\", \"acc8.near\"], grantees: vec![\"acc9.near\", \"acc10.near\"], }), ]) } ```\n\n# Uniqueness and ordering\n\nAccount ids returned in vectors are unique but not ordered.",
          "type": "object",
          "required": [
            "roles",
            "super_admins"
          ],
          "properties": {
            "roles": {
              "description": "The admins and grantees of all roles.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/PermissionedAccountsPerRole"
              }
            },
            "super_admins": {
              "description": "The accounts that have super admin permissions.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountId"
              }
            }
          }
        },
        "PermissionedAccountsPerRole": {
          "description": "Collects all admins and grantees of a role.\n\n# Uniqueness and ordering\n\nAccount ids returned in vectors are unique but not ordered.",
          "type": "object",
          "required": [
            "admins",
            "grantees"
          ],
          "properties": {
            "admins": {
              "description": "The accounts that have admin permissions for the role.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountId"
              }
            },
            "grantees": {
              "description": "The accounts that have been granted the role.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountId"
              }
            }
          }
        },
        "Promise": true
      }
    }
  }
}